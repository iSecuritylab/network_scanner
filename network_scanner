#!/usr/bin/env python

import scapy.all as scapy
import argparse

def get_arguments():
    # Parse command line arguments using argparse
    parser = argparse.ArgumentParser()
    parser.add_argument("-t", "--target", dest="target", help="Target IP / IP range.")
    options = parser.parse_args()
    return options

def scan(ip):
    # Create ARP request packet and broadcast it to the network
    arp_request = scapy.ARP(pdst=ip)
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    arp_request_broadcast = broadcast / arp_request
    # Send the ARP request and capture the response
    answered_list = scapy.srp(arp_request_broadcast, timeout=1, verbose=False)[0]

    clients_list = []
    # Extract and store IP-MAC pairs from the response
    for element in answered_list:
        client_dict = {"ip": element[1].psrc, "mac": element[1].hwsrc}
        clients_list.append(client_dict)
    return clients_list

def print_result(result_list):
    # Display the discovered IP-MAC pairs in a formatted table
    print("IP\t\t\tMAC Address\n------------------------------------------")
    for client in result_list:
        print(client["ip"] + "\t\t" + client["mac"])
    # Commented out separator line to improve output readability

# Corrected function calls
options = get_arguments()
scan_result = scan(options.target)
print_result(scan_result)
